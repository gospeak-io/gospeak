# https://github.com/lightbend/config#uses-of-substitutions

"/u/groups/{group-slug}/events" {
  get {
    tags: ["Orga API"]
    summary: "paginated list of all events for the group"
    parameters: [{name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}] ${X-vars.parameters.page}
    responses {
      200: ${X-vars.responses.page} {content {application/json {schema {properties {data {items {"$ref": "#/components/schemas/EventOrga"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/events/{event-slug}" {
  get {
    tags: ["Orga API"]
    summary: "details for an event"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "event-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/EventSlug"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {"$ref": "#/components/schemas/EventOrga"}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}

"/u/groups/{group-slug}/cfps" {
  get {
    tags: ["Orga API"]
    summary: "paginated list of all CFPs for the group"
    parameters: [{name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}] ${X-vars.parameters.page}
    responses {
      200: ${X-vars.responses.page} {content {application/json {schema {properties {data {items {"$ref": "#/components/schemas/CfpOrga"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}" {
  get {
    tags: ["Orga API"]
    summary: "details for a CFP"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {"$ref": "#/components/schemas/CfpOrga"}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}/proposals" {
  get {
    tags: ["Orga API"]
    summary: "paginated list of proposals for a CFP"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
    ]
    responses {
      200: ${X-vars.responses.page} {content {application/json {schema {properties {data {items {"$ref": "#/components/schemas/ProposalOrga"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}/proposals/{proposal-id}" {
  get {
    tags: ["Orga API"]
    summary: "details for a CFP"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
      {name: "proposal-id", in: "path", required: true, schema {"$ref": "#/components/schemas/ProposalId"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {"$ref": "#/components/schemas/ProposalOrga"}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}/proposals/{proposal-id}/ratings" {
  get {
    tags: ["Orga API"]
    summary: "list of ratings attributed to the proposal"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
      {name: "proposal-id", in: "path", required: true, schema {"$ref": "#/components/schemas/ProposalId"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {type: array, items {"$ref": "#/components/schemas/ProposalRating"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}/proposals/{proposal-id}/comments/speaker" {
  get {
    tags: ["Orga API"]
    summary: "list of comments with the speaker for this proposal"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
      {name: "proposal-id", in: "path", required: true, schema {"$ref": "#/components/schemas/ProposalId"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {type: array, items {"$ref": "#/components/schemas/Comment"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}
"/u/groups/{group-slug}/cfps/{cfp-slug}/proposals/{proposal-id}/comments/orga" {
  get {
    tags: ["Orga API"]
    summary: "list of comments between orgas for this proposal"
    parameters: [
      {name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}
      {name: "cfp-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/CfpSlug"}}
      {name: "proposal-id", in: "path", required: true, schema {"$ref": "#/components/schemas/ProposalId"}}
    ]
    responses {
      200: ${X-vars.responses.item} {content {application/json {schema {properties {data {type: array, items {"$ref": "#/components/schemas/Comment"}}}}}}}
      403: ${X-vars.responses.error}
      404: ${X-vars.responses.error}
    }
  }
}


"/u/groups/{group-slug}/proposals" {
  get {
    tags: ["Orga API"]
    summary: "paginated list of all proposals for the group (any CFP)"
    parameters: [{name: "group-slug", in: "path", required: true, schema {"$ref": "#/components/schemas/GroupSlug"}}]
    responses {
      200: ${X-vars.responses.page} {content {application/json {schema {properties {data {items {"$ref": "#/components/schemas/ProposalOrga"}}}}}}}
      403: ${X-vars.responses.error}
    }
  }
}
