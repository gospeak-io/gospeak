auth {
  cookie {
    authenticator {
      cookie-name = "authenticator"
      cookie-path = "/"
      # cookie-domain = "???"
      secure-cookie = false
      http-only-cookie = true
      same-site = "Lax" # 'Lax' or 'Strict'
      use-fingerprinting = true
      # cookieMaxAge = 30 days
      authenticator-idle-timeout = 30 minutes
      authenticator-expiry = 12 hours
    }
    signer {
      key = ${SILHOUETTE_COOKIE_SIGNER} // A unique encryption key
      # pepper = "-mohiva-silhouette-signer-"
    }
    crypter {
      key = ${SILHOUETTE_COOKIE_CRYPTER} // A unique encryption key
    }
    remember-me {
      cookie-max-age = 30 days
      authenticator-idle-timeout = 5 days
      authenticator-expiry = 30 days
    }
  }
  jwt {
  }

  # Social providers, listed aphabetically, not used for now :(

  facebook {
    client-id = "changeme"
    client-id = ${?OAUTH_FACEBOOK_CLIENT_ID}
    client-secret = "changeme"
    client-secret = ${?OAUTH_FACEBOOK_CLIENT_SECRET}
    scope = "email"
  }
  github {
    client-id = "changeme"
    client-id = ${?OAUTH_GITHUB_CLIENT_ID}
    client-secret = "changeme"
    client-secret = ${?OAUTH_GITHUB_CLIENT_SECRET}
  }
  google {
    client-id = "changeme"
    client-id = ${?OAUTH_GOOGLE_CLIENT_ID}
    client-secret = "changeme"
    client-secret = ${?OAUTH_GOOGLE_CLIENT_SECRET}
    scope = "profile email"
  }
  linkedin {
    client-id = "changeme"
    client-id = ${?OAUTH_LINKEDIN_CLIENT_ID}
    client-secret = "changeme"
    client-secret = ${?OAUTH_LINKEDIN_CLIENT_SECRET}
    scope = "r_emailaddress"
  }
  twitter {
    consumer-key = "changeme"
    consumer-key = ${?OAUTH_TWITTER_CONSUMER_KEY}
    consumer-secret = "changeme"
    consumer-secret = ${?OAUTH_TWITTER_CONSUMER_SECRET}
  }
}


# Silhouette settings, kept here only for example, DO NOT USE!!!
silhouette {
  # Cookie authenticator settings
  cookie.authenticator.cookie-name = "authenticator"
  cookie.authenticator.cookie-path = "/"
  cookie.authenticator.secure-cookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  cookie.authenticator.http-only-cookie = true
  cookie.authenticator.same-site = "Lax"
  cookie.authenticator.use-fingerprinting = true
  cookie.authenticator.authenticator-idle-timeout = 14 minutes
  cookie.authenticator.authenticator-expiry = 12 hours
  cookie.authenticator.rememberMe.cookieMaxAge = 30 days
  cookie.authenticator.rememberMe.authenticatorIdleTimeout = 5 days
  cookie.authenticator.rememberMe.authenticatorExpiry = 30 days
  cookie.authenticator.signer.key = "changeme" // A unique encryption key
  cookie.authenticator.crypter.key = "changeme" // A unique encryption key

  # JWT authenticator settings (JSON Web Tokens)
  jwt.authenticator.headerName = "X-Auth-Token"
  jwt.authenticator.issuerClaim = "PlaySilhouetteRest"
  jwt.authenticator.encryptSubject = true
  jwt.authenticator.authenticatorExpiry = 12 hours
  jwt.authenticator.sharedSecret = "changeme" // at least 256 bits
  jwt.authenticator.rememberMe.authenticatorExpiry = 30 days
  jwt.authenticator.rememberMe.authenticatorIdleTimeout = 5 days
  jwt.authenticator.crypter.key = "changeme" // A unique encryption key

  # OAuth1 token secret provider settings
  oauth1TokenSecretProvider.cookieName = "OAuth1TokenSecret"
  oauth1TokenSecretProvider.cookiePath = "/"
  oauth1TokenSecretProvider.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  oauth1TokenSecretProvider.httpOnlyCookie = true
  oauth1TokenSecretProvider.sameSite = "Lax"
  oauth1TokenSecretProvider.expirationTime = 5 minutes

  oauth1TokenSecretProvider.signer.key = "changeme" // A unique encryption key
  oauth1TokenSecretProvider.crypter.key = "changeme" // A unique encryption key

  # Social state handler
  socialStateHandler.signer.key = "changeme" // A unique encryption key

  # CSRF state item handler settings
  csrfStateItemHandler.cookieName = "OAuth2State"
  csrfStateItemHandler.cookiePath = "/"
  csrfStateItemHandler.secureCookie = false // Disabled for testing on localhost without SSL, otherwise cookie couldn't be set
  csrfStateItemHandler.httpOnlyCookie = true
  csrfStateItemHandler.sameSite = "Lax"
  csrfStateItemHandler.expirationTime = 5 minutes

  csrfStateItemHandler.signer.key = "changeme" // A unique encryption key

  # Facebook provider
  facebook.authorizationURL = "https://graph.facebook.com/v2.3/oauth/authorize"
  facebook.accessTokenURL = "https://graph.facebook.com/v2.3/oauth/access_token"
  facebook.redirectURL = "http://localhost:9000/authenticate/facebook"
  facebook.clientID = ""
  facebook.clientID = ${?OAUTH_FACEBOOK_CLIENT_ID}
  facebook.clientSecret = ""
  facebook.clientSecret = ${?OAUTH_FACEBOOK_CLIENT_SECRET}
  facebook.scope = "email"

  # Google provider
  google.authorizationURL = "https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL = "https://accounts.google.com/o/oauth2/token"
  google.redirectURL = "http://localhost:9000/authenticate/google"
  google.clientID = ""
  google.clientID = ${?OAUTH_GOOGLE_CLIENT_ID}
  google.clientSecret = ""
  google.clientSecret = ${?OAUTH_GOOGLE_CLIENT_SECRET}
  google.scope = "profile email"

  # VK provider
  vk.authorizationURL = "http://oauth.vk.com/authorize"
  vk.accessTokenURL = "https://oauth.vk.com/access_token"
  vk.redirectURL = "http://localhost:9000/authenticate/vk"
  vk.clientID = ""
  vk.clientID = ${?OAUTH_VK_CLIENT_ID}
  vk.clientSecret = ""
  vk.clientSecret = ${?OAUTH_VK_CLIENT_SECRET}
  vk.scope = "email"

  # Twitter provider
  twitter.requestTokenURL = "https://twitter.com/oauth/request_token"
  twitter.accessTokenURL = "https://twitter.com/oauth/access_token"
  twitter.authorizationURL = "https://twitter.com/oauth/authenticate"
  twitter.callbackURL = ${?OAUTH_TWITTER_CALLBACK_URL}
  twitter.callbackURL = "http://localhost:9000/authenticate/twitter"
  twitter.consumerKey = ""
  twitter.consumerKey = ${?OAUTH_TWITTER_CONSUMER_KEY}
  twitter.consumerSecret = ""
  twitter.consumerSecret = ${?OAUTH_TWITTER_CONSUMER_SECRET}

  # Github Provider
  github.authorizationURl = "https://github.com/login/oauth/authorize"
  github.accessTokenURl = "https://github.com/login/oauth/access_token"
  github.redirectURL = "https://your.domain.tld/authenticate/github"
  github.clientID = ""
  github.clientID = ${?OAUTH_GITHUB_CLIENT_ID}
  github.clientSecret = ""
  github.clientSecret = ${?OAUTH_GITHUB_CLIENT_SECRET}

  # Xing provider
  xing.requestTokenURL = "https://api.xing.com/v1/request_token"
  xing.accessTokenURL = "https://api.xing.com/v1/access_token"
  xing.authorizationURL = "https://api.xing.com/v1/authorize"
  xing.callbackURL = "http://localhost:9000/authenticate/xing"
  xing.consumerKey = ""
  xing.consumerKey = ${?OAUTH_XING_CONSUMER_KEY}
  xing.consumerSecret = ""
  xing.consumerSecret = ${?OAUTH_XING_CONSUMER_SECRET}

  # Yahoo provider
  yahoo.providerURL = "https://me.yahoo.com/"
  yahoo.callbackURL = "http://localhost:9000/authenticate/yahoo"
  yahoo.axRequired = {
    "fullname": "http://axschema.org/namePerson",
    "email": "http://axschema.org/contact/email",
    "image": "http://axschema.org/media/image/default"
  }
  yahoo.realm = "http://localhost:9000"
}
