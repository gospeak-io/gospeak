package gospeak.libs.sql.testingutils.database.tables

import gospeak.libs.sql.dsl.Table._
import gospeak.libs.sql.dsl._
import gospeak.libs.sql.testingutils.Entities._


/**
 * Hello
 *
 * Class generated by gospeak.libs.sql.generator.writer.ScalaWriter
 */
class USERS private() extends Table.SqlTable("PUBLIC", "users", Some("u")) {
  val ID: SqlField[User.Id, USERS] = new SqlField[User.Id, USERS](this, "id") // INT NOT NULL
  val NAME: SqlField[String, USERS] = new SqlField[String, USERS](this, "name") // VARCHAR(50) NOT NULL
  val EMAIL: SqlFieldOpt[String, USERS] = new SqlFieldOpt[String, USERS](this, "email") // VARCHAR(50)

  override def getFields: List[SqlField[_, USERS]] = List(ID, NAME, EMAIL)

  override def getSorts: List[Sort] = List()
}

private[database] object USERS {
  val table = new USERS() // unique table instance, should be accessed through `gospeak.libs.sql.testingutils.database.Tables` object
}
